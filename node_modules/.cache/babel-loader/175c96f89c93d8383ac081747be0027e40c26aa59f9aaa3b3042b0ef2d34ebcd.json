{"ast":null,"code":"var _jsxFileName = \"/Users/praveenkumarkrishnan/Desktop/Project/userdetails/src/Components/TextField.js\",\n  _s = $RefreshSig$();\nimport { TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenericInputField(props) {\n  _s();\n  const {\n    label,\n    helperText,\n    errorStatus = false,\n    maxLength,\n    type,\n    validate = false\n  } = props;\n  const [inputValue, setinputValue] = useState(\"\");\n  const onChangeHandler = (e = {}) => {\n    var _e$target, _e$target2, _e$target3;\n    let Alphacharregex = /^[a-zA-Z]+$/;\n    console.log(\"entered value\", e.target.value);\n    let finalValue = validate ? type === \"onlyAlpha\" ? Alphacharregex.test(str1) ? e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value : \"\" : Alphacharregex.test(str1) ? e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value : \"\" : e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.value;\n    setinputValue(finalValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      error: errorStatus,\n      id: label,\n      label: label,\n      variant: \"outlined\",\n      helperText: errorStatus ? helperText : \"\",\n      onChange: onChangeHandler,\n      value: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericInputField, \"d90VzFnwGII6lm4sXKNW1xQbci4=\");\n_c = GenericInputField;\nvar _c;\n$RefreshReg$(_c, \"GenericInputField\");","map":{"version":3,"names":["TextField","Box","useState","jsxDEV","_jsxDEV","GenericInputField","props","_s","label","helperText","errorStatus","maxLength","type","validate","inputValue","setinputValue","onChangeHandler","e","_e$target","_e$target2","_e$target3","Alphacharregex","console","log","target","value","finalValue","test","str1","sx","p","children","fullWidth","error","id","variant","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/praveenkumarkrishnan/Desktop/Project/userdetails/src/Components/TextField.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\n\nexport default function GenericInputField(props) {\n  const {\n    label,\n    helperText,\n    errorStatus = false,\n    maxLength,\n    type,\n    validate = false,\n  } = props;\n\n  const [inputValue, setinputValue] = useState(\"\");\n  const onChangeHandler = (e = {}) => {\n    let Alphacharregex = /^[a-zA-Z]+$/;\n    console.log(\"entered value\", e.target.value);\n    let finalValue = validate\n      ? type === \"onlyAlpha\"\n        ? Alphacharregex.test(str1)\n          ? e?.target?.value\n          : \"\"\n        : Alphacharregex.test(str1)\n        ? e?.target?.value\n        : \"\"\n      : e?.target?.value;\n    setinputValue(finalValue);\n  };\n  return (\n    <Box sx={{ p: 1 }}>\n      <TextField\n        fullWidth\n        error={errorStatus}\n        id={label}\n        label={label}\n        variant=\"outlined\"\n        helperText={errorStatus ? helperText : \"\"}\n        onChange={onChangeHandler}\n        value={inputValue}\n      />\n    </Box>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,GAAG,QAAQ,aAAa;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC/C,MAAM;IACJC,KAAK;IACLC,UAAU;IACVC,WAAW,GAAG,KAAK;IACnBC,SAAS;IACTC,IAAI;IACJC,QAAQ,GAAG;EACb,CAAC,GAAGP,KAAK;EAET,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMc,eAAe,GAAGA,CAACC,CAAC,GAAG,CAAC,CAAC,KAAK;IAAA,IAAAC,SAAA,EAAAC,UAAA,EAAAC,UAAA;IAClC,IAAIC,cAAc,GAAG,aAAa;IAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEN,CAAC,CAACO,MAAM,CAACC,KAAK,CAAC;IAC5C,IAAIC,UAAU,GAAGb,QAAQ,GACrBD,IAAI,KAAK,WAAW,GAClBS,cAAc,CAACM,IAAI,CAACC,IAAI,CAAC,GACvBX,CAAC,aAADA,CAAC,wBAAAC,SAAA,GAADD,CAAC,CAAEO,MAAM,cAAAN,SAAA,uBAATA,SAAA,CAAWO,KAAK,GAChB,EAAE,GACJJ,cAAc,CAACM,IAAI,CAACC,IAAI,CAAC,GACzBX,CAAC,aAADA,CAAC,wBAAAE,UAAA,GAADF,CAAC,CAAEO,MAAM,cAAAL,UAAA,uBAATA,UAAA,CAAWM,KAAK,GAChB,EAAE,GACJR,CAAC,aAADA,CAAC,wBAAAG,UAAA,GAADH,CAAC,CAAEO,MAAM,cAAAJ,UAAA,uBAATA,UAAA,CAAWK,KAAK;IACpBV,aAAa,CAACW,UAAU,CAAC;EAC3B,CAAC;EACD,oBACEtB,OAAA,CAACH,GAAG;IAAC4B,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,eAChB3B,OAAA,CAACJ,SAAS;MACRgC,SAAS;MACTC,KAAK,EAAEvB,WAAY;MACnBwB,EAAE,EAAE1B,KAAM;MACVA,KAAK,EAAEA,KAAM;MACb2B,OAAO,EAAC,UAAU;MAClB1B,UAAU,EAAEC,WAAW,GAAGD,UAAU,GAAG,EAAG;MAC1C2B,QAAQ,EAAEpB,eAAgB;MAC1BS,KAAK,EAAEX;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjC,EAAA,CAvCuBF,iBAAiB;AAAAoC,EAAA,GAAjBpC,iBAAiB;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
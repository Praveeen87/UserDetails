{"ast":null,"code":"var _jsxFileName = \"/Users/praveenkumarkrishnan/Desktop/Project/userdetails/src/Components/TextField.js\",\n  _s = $RefreshSig$();\nimport { TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenericInputField(props) {\n  _s();\n  const {\n    label,\n    helperText,\n    maxLength,\n    type,\n    validate = false\n  } = props;\n  const [inputValue, setinputValue] = useState(\"\");\n  const [errorStatus, seterrorStatus] = useState(false);\n  const validateInput = (pattern, input) => {\n    if (validate) {\n      var _e, _e$target;\n      let validInput = pattern.test((_e = e) === null || _e === void 0 ? void 0 : (_e$target = _e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n      if (type == \"onlyAlpha\") {\n        var _e2, _e2$target;\n        validInput = Alphacharregex.test((_e2 = e) === null || _e2 === void 0 ? void 0 : (_e2$target = _e2.target) === null || _e2$target === void 0 ? void 0 : _e2$target.value);\n        console.log(\"type\", \"alpha\");\n      } else {\n        var _e3, _e3$target;\n        validInput = emailRegex.test((_e3 = e) === null || _e3 === void 0 ? void 0 : (_e3$target = _e3.target) === null || _e3$target === void 0 ? void 0 : _e3$target.value);\n        console.log(\"type\", \"email\");\n        console.log(\"type\", validInput);\n      }\n    } else {\n      setinputValue(targetValue);\n    }\n  };\n  const onChangeHandler = (e = {}) => {\n    var _e$target2;\n    let Alphacharregex = /^[a-zA-Z]+$/;\n    let emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    let targetValue = e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value;\n    let validInput = validateInput(type == \"onlyAlpha\" ? Alphacharregex : emailRegex, targetValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      error: errorStatus,\n      id: label,\n      label: label,\n      variant: \"outlined\",\n      helperText: errorStatus ? helperText : \"\",\n      onChange: onChangeHandler,\n      value: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericInputField, \"arMTvma+Gn0z60l/AW0RZb4xOVA=\");\n_c = GenericInputField;\nvar _c;\n$RefreshReg$(_c, \"GenericInputField\");","map":{"version":3,"names":["TextField","Box","useState","jsxDEV","_jsxDEV","GenericInputField","props","_s","label","helperText","maxLength","type","validate","inputValue","setinputValue","errorStatus","seterrorStatus","validateInput","pattern","input","_e","_e$target","validInput","test","e","target","value","_e2","_e2$target","Alphacharregex","console","log","_e3","_e3$target","emailRegex","targetValue","onChangeHandler","_e$target2","sx","p","children","fullWidth","error","id","variant","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/praveenkumarkrishnan/Desktop/Project/userdetails/src/Components/TextField.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\n\nexport default function GenericInputField(props) {\n  const { label, helperText, maxLength, type, validate = false } = props;\n\n  const [inputValue, setinputValue] = useState(\"\");\n  const [errorStatus, seterrorStatus] = useState(false);\n  const validateInput = (pattern, input) => {\n    if (validate) {\n      let validInput = pattern.test(e?.target?.value);\n      if (type == \"onlyAlpha\") {\n        validInput = Alphacharregex.test(e?.target?.value);\n        console.log(\"type\", \"alpha\");\n      } else {\n        validInput = emailRegex.test(e?.target?.value);\n        console.log(\"type\", \"email\");\n        console.log(\"type\", validInput);\n      }\n    } else {\n      setinputValue(targetValue);\n    }\n  };\n  const onChangeHandler = (e = {}) => {\n    let Alphacharregex = /^[a-zA-Z]+$/;\n    let emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    let targetValue = e?.target?.value;\n\n    let validInput = validateInput(\n      type == \"onlyAlpha\" ? Alphacharregex : emailRegex,\n      targetValue\n    );\n  };\n  return (\n    <Box sx={{ p: 1 }}>\n      <TextField\n        fullWidth\n        error={errorStatus}\n        id={label}\n        label={label}\n        variant=\"outlined\"\n        helperText={errorStatus ? helperText : \"\"}\n        onChange={onChangeHandler}\n        value={inputValue}\n      />\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}